
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "./Provider/ThemeProvider";
import { Toaster } from "react-hot-toast";

import Session from "./Provider/Session";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html
      lang="en"
      className="dark"
      suppressHydrationWarning
    >
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
        (function() {
          try {
            var savedTheme = localStorage.getItem("workstream-theme");
            var prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
            var theme = savedTheme ? savedTheme : (prefersDark ? "dark" : "light");
            window.__theme = theme; // ðŸ‘ˆ make it globally available
            if (theme === "dark") {
              document.documentElement.classList.add("dark");
            } else {
              document.documentElement.classList.remove("dark");
            }
          } catch (_) {}
        })();
      `,
          }}
        />
      </head>

      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Session>
          <ThemeProvider>
            {children}
            <Toaster position="top-right" reverseOrder={false} />
          </ThemeProvider>
        </Session>
      </body>
    </html>
  );
}
